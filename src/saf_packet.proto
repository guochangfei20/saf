syntax = "proto3";
package sails;

// 请求与响应包定义

// import "google/protobuf/any.proto";

// 因为protobuf中的int值是根据值的大小来设置占几位的
// 所以定义时就可以直接用int而不是int8，int16之类更小的范围
// v3中有一个any类型，它能很好的代表要传输的具体消息
// 不然就要用string这个类型了，不过这样没有any类型明确


message RequestPacket {
  uint32 version = 1;  // sdk版本
  uint32 type = 2;  // 请求类型(包含rpc调用,ping)
  uint32 sn = 3;  // 序列号
  string serviceName = 4;  // 服务
  string funcName = 5;  // 方法
  //google.protobuf.Any detail = 6;  // 消息体，any类型更明确，但是对swig调用方式兼容性不好
  bytes detail = 6;  // 消息体，不要用string，因为具体消息经过编码后不是标准utf-8 string格式
  int32 timeout = 7;  // 超时时间，0表示永不，以秒为单位，因为客户端会设置一个超时，把超时时间告诉服务器，以防无效的请求
  map<string, string> context = 8;  // 业务上下文
  map<string, string> status = 9;  // 框架协议上下文
  int32 hashCode = 10;  // hash值，用户保证一个用户的请求发送到同一个server(不严格保证)
}

message ResponsePacket {
  uint32 version = 1;  // sdk版本
  uint32 type = 2;  // 响应类型
  uint32 sn = 3;  // 序列号
  int32 ret = 4;  // 错误类型
  // google.protobuf.Any detail = 5;  // 消息体
  bytes detail = 5;  // 消息体
}