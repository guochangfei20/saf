// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: saf_packet.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "saf_packet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace sails {

namespace {

const ::google::protobuf::Descriptor* RequestPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestPacket_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestPacket_ContextEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* RequestPacket_StatusEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ResponsePacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponsePacket_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_saf_5fpacket_2eproto() {
  protobuf_AddDesc_saf_5fpacket_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "saf_packet.proto");
  GOOGLE_CHECK(file != NULL);
  RequestPacket_descriptor_ = file->message_type(0);
  static const int RequestPacket_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPacket, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPacket, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPacket, sn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPacket, servicename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPacket, funcname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPacket, detail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPacket, timeout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPacket, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPacket, status_),
  };
  RequestPacket_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RequestPacket_descriptor_,
      RequestPacket::default_instance_,
      RequestPacket_offsets_,
      -1,
      -1,
      -1,
      sizeof(RequestPacket),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPacket, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPacket, _is_default_instance_));
  RequestPacket_ContextEntry_descriptor_ = RequestPacket_descriptor_->nested_type(0);
  RequestPacket_StatusEntry_descriptor_ = RequestPacket_descriptor_->nested_type(1);
  ResponsePacket_descriptor_ = file->message_type(1);
  static const int ResponsePacket_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponsePacket, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponsePacket, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponsePacket, sn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponsePacket, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponsePacket, detail_),
  };
  ResponsePacket_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResponsePacket_descriptor_,
      ResponsePacket::default_instance_,
      ResponsePacket_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResponsePacket),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponsePacket, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponsePacket, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_saf_5fpacket_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RequestPacket_descriptor_, &RequestPacket::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        RequestPacket_ContextEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                RequestPacket_ContextEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        RequestPacket_StatusEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                RequestPacket_StatusEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResponsePacket_descriptor_, &ResponsePacket::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_saf_5fpacket_2eproto() {
  delete RequestPacket::default_instance_;
  delete RequestPacket_reflection_;
  delete ResponsePacket::default_instance_;
  delete ResponsePacket_reflection_;
}

void protobuf_AddDesc_saf_5fpacket_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020saf_packet.proto\022\005sails\032\031google/protob"
    "uf/any.proto\"\335\002\n\rRequestPacket\022\017\n\007versio"
    "n\030\001 \001(\r\022\014\n\004type\030\002 \001(\r\022\n\n\002sn\030\003 \001(\r\022\023\n\013ser"
    "viceName\030\004 \001(\t\022\020\n\010funcName\030\005 \001(\t\022$\n\006deta"
    "il\030\006 \001(\0132\024.google.protobuf.Any\022\017\n\007timeou"
    "t\030\007 \001(\005\0222\n\007context\030\010 \003(\0132!.sails.Request"
    "Packet.ContextEntry\0220\n\006status\030\t \003(\0132 .sa"
    "ils.RequestPacket.StatusEntry\032.\n\014Context"
    "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032-\n"
    "\013StatusEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
    ":\0028\001\"n\n\016ResponsePacket\022\017\n\007version\030\001 \001(\r\022"
    "\014\n\004type\030\002 \001(\r\022\n\n\002sn\030\003 \001(\r\022\013\n\003ret\030\004 \001(\005\022$"
    "\n\006detail\030\005 \001(\0132\024.google.protobuf.Anyb\006pr"
    "oto3", 524);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "saf_packet.proto", &protobuf_RegisterTypes);
  RequestPacket::default_instance_ = new RequestPacket();
  ResponsePacket::default_instance_ = new ResponsePacket();
  RequestPacket::default_instance_->InitAsDefaultInstance();
  ResponsePacket::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_saf_5fpacket_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_saf_5fpacket_2eproto {
  StaticDescriptorInitializer_saf_5fpacket_2eproto() {
    protobuf_AddDesc_saf_5fpacket_2eproto();
  }
} static_descriptor_initializer_saf_5fpacket_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int RequestPacket::kVersionFieldNumber;
const int RequestPacket::kTypeFieldNumber;
const int RequestPacket::kSnFieldNumber;
const int RequestPacket::kServiceNameFieldNumber;
const int RequestPacket::kFuncNameFieldNumber;
const int RequestPacket::kDetailFieldNumber;
const int RequestPacket::kTimeoutFieldNumber;
const int RequestPacket::kContextFieldNumber;
const int RequestPacket::kStatusFieldNumber;
#endif  // !_MSC_VER

RequestPacket::RequestPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sails.RequestPacket)
}

void RequestPacket::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  detail_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
}

RequestPacket::RequestPacket(const RequestPacket& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:sails.RequestPacket)
}

void RequestPacket::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  version_ = 0u;
  type_ = 0u;
  sn_ = 0u;
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  funcname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_ = NULL;
  timeout_ = 0;
  context_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  context_.SetEntryDescriptor(
      &::sails::RequestPacket_ContextEntry_descriptor_);
  status_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  status_.SetEntryDescriptor(
      &::sails::RequestPacket_StatusEntry_descriptor_);
}

RequestPacket::~RequestPacket() {
  // @@protoc_insertion_point(destructor:sails.RequestPacket)
  SharedDtor();
}

void RequestPacket::SharedDtor() {
  servicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  funcname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete detail_;
  }
}

void RequestPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestPacket_descriptor_;
}

const RequestPacket& RequestPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_saf_5fpacket_2eproto();
  return *default_instance_;
}

RequestPacket* RequestPacket::default_instance_ = NULL;

RequestPacket* RequestPacket::New(::google::protobuf::Arena* arena) const {
  RequestPacket* n = new RequestPacket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestPacket::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RequestPacket*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(version_, type_);
  ZR_(sn_, timeout_);
  servicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  funcname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) delete detail_;
  detail_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  context_.Clear();
  status_.Clear();
}

bool RequestPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sails.RequestPacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional uint32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sn;
        break;
      }

      // optional uint32 sn = 3;
      case 3: {
        if (tag == 24) {
         parse_sn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sn_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_serviceName;
        break;
      }

      // optional string serviceName = 4;
      case 4: {
        if (tag == 34) {
         parse_serviceName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servicename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->servicename().data(), this->servicename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sails.RequestPacket.serviceName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_funcName;
        break;
      }

      // optional string funcName = 5;
      case 5: {
        if (tag == 42) {
         parse_funcName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->funcname().data(), this->funcname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sails.RequestPacket.funcName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_detail;
        break;
      }

      // optional .google.protobuf.Any detail = 6;
      case 6: {
        if (tag == 50) {
         parse_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_detail()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_timeout;
        break;
      }

      // optional int32 timeout = 7;
      case 7: {
        if (tag == 56) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeout_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_context;
        break;
      }

      // map<string, string> context = 8;
      case 8: {
        if (tag == 66) {
         parse_context:
          DO_(input->IncrementRecursionDepth());
         parse_loop_context:
          ::google::protobuf::scoped_ptr<RequestPacket_ContextEntry> entry(context_.NewEntry());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, entry.get()));
          (*mutable_context())[entry->key()] = *entry->mutable_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_context;
        if (input->ExpectTag(74)) goto parse_loop_status;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<string, string> status = 9;
      case 9: {
        if (tag == 74) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_status:
          ::google::protobuf::scoped_ptr<RequestPacket_StatusEntry> entry(status_.NewEntry());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, entry.get()));
          (*mutable_status())[entry->key()] = *entry->mutable_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_status;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sails.RequestPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sails.RequestPacket)
  return false;
#undef DO_
}

void RequestPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sails.RequestPacket)
  // optional uint32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional uint32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // optional uint32 sn = 3;
  if (this->sn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sn(), output);
  }

  // optional string serviceName = 4;
  if (this->servicename().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->servicename().data(), this->servicename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sails.RequestPacket.serviceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->servicename(), output);
  }

  // optional string funcName = 5;
  if (this->funcname().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->funcname().data(), this->funcname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sails.RequestPacket.funcName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->funcname(), output);
  }

  // optional .google.protobuf.Any detail = 6;
  if (this->has_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->detail_, output);
  }

  // optional int32 timeout = 7;
  if (this->timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->timeout(), output);
  }

  // map<string, string> context = 8;
  {
    ::google::protobuf::scoped_ptr<RequestPacket_ContextEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->context().begin();
        it != this->context().end(); ++it) {
      entry.reset(context_.NewEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
          8, *entry, output);
    }
  }

  // map<string, string> status = 9;
  {
    ::google::protobuf::scoped_ptr<RequestPacket_StatusEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->status().begin();
        it != this->status().end(); ++it) {
      entry.reset(status_.NewEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
          9, *entry, output);
    }
  }

  // @@protoc_insertion_point(serialize_end:sails.RequestPacket)
}

::google::protobuf::uint8* RequestPacket::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sails.RequestPacket)
  // optional uint32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional uint32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // optional uint32 sn = 3;
  if (this->sn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sn(), target);
  }

  // optional string serviceName = 4;
  if (this->servicename().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->servicename().data(), this->servicename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sails.RequestPacket.serviceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->servicename(), target);
  }

  // optional string funcName = 5;
  if (this->funcname().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->funcname().data(), this->funcname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sails.RequestPacket.funcName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->funcname(), target);
  }

  // optional .google.protobuf.Any detail = 6;
  if (this->has_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *this->detail_, target);
  }

  // optional int32 timeout = 7;
  if (this->timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->timeout(), target);
  }

  // map<string, string> context = 8;
  {
    ::google::protobuf::scoped_ptr<RequestPacket_ContextEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->context().begin();
        it != this->context().end(); ++it) {
      entry.reset(context_.NewEntryWrapper(it->first, it->second));
      target = ::google::protobuf::internal::WireFormatLite::
          WriteMessageNoVirtualToArray(
              8, *entry, target);
    }
  }

  // map<string, string> status = 9;
  {
    ::google::protobuf::scoped_ptr<RequestPacket_StatusEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->status().begin();
        it != this->status().end(); ++it) {
      entry.reset(status_.NewEntryWrapper(it->first, it->second));
      target = ::google::protobuf::internal::WireFormatLite::
          WriteMessageNoVirtualToArray(
              9, *entry, target);
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:sails.RequestPacket)
  return target;
}

int RequestPacket::ByteSize() const {
  int total_size = 0;

  // optional uint32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // optional uint32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // optional uint32 sn = 3;
  if (this->sn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sn());
  }

  // optional string serviceName = 4;
  if (this->servicename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servicename());
  }

  // optional string funcName = 5;
  if (this->funcname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->funcname());
  }

  // optional .google.protobuf.Any detail = 6;
  if (this->has_detail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->detail_);
  }

  // optional int32 timeout = 7;
  if (this->timeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timeout());
  }

  // map<string, string> context = 8;
  total_size += 1 * this->context_size();
  {
    ::google::protobuf::scoped_ptr<RequestPacket_ContextEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->context().begin();
        it != this->context().end(); ++it) {
      entry.reset(context_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> status = 9;
  total_size += 1 * this->status_size();
  {
    ::google::protobuf::scoped_ptr<RequestPacket_StatusEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->status().begin();
        it != this->status().end(); ++it) {
      entry.reset(status_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestPacket::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RequestPacket* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestPacket>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestPacket::MergeFrom(const RequestPacket& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  context_.MergeFrom(from.context_);
  status_.MergeFrom(from.status_);
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.sn() != 0) {
    set_sn(from.sn());
  }
  if (from.servicename().size() > 0) {

    servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
  }
  if (from.funcname().size() > 0) {

    funcname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.funcname_);
  }
  if (from.has_detail()) {
    mutable_detail()->::google::protobuf::Any::MergeFrom(from.detail());
  }
  if (from.timeout() != 0) {
    set_timeout(from.timeout());
  }
}

void RequestPacket::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestPacket::CopyFrom(const RequestPacket& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestPacket::IsInitialized() const {

  return true;
}

void RequestPacket::Swap(RequestPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestPacket::InternalSwap(RequestPacket* other) {
  std::swap(version_, other->version_);
  std::swap(type_, other->type_);
  std::swap(sn_, other->sn_);
  servicename_.Swap(&other->servicename_);
  funcname_.Swap(&other->funcname_);
  std::swap(detail_, other->detail_);
  std::swap(timeout_, other->timeout_);
  context_.Swap(&other->context_);
  status_.Swap(&other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestPacket_descriptor_;
  metadata.reflection = RequestPacket_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestPacket

// optional uint32 version = 1;
void RequestPacket::clear_version() {
  version_ = 0u;
}
 ::google::protobuf::uint32 RequestPacket::version() const {
  // @@protoc_insertion_point(field_get:sails.RequestPacket.version)
  return version_;
}
 void RequestPacket::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:sails.RequestPacket.version)
}

// optional uint32 type = 2;
void RequestPacket::clear_type() {
  type_ = 0u;
}
 ::google::protobuf::uint32 RequestPacket::type() const {
  // @@protoc_insertion_point(field_get:sails.RequestPacket.type)
  return type_;
}
 void RequestPacket::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:sails.RequestPacket.type)
}

// optional uint32 sn = 3;
void RequestPacket::clear_sn() {
  sn_ = 0u;
}
 ::google::protobuf::uint32 RequestPacket::sn() const {
  // @@protoc_insertion_point(field_get:sails.RequestPacket.sn)
  return sn_;
}
 void RequestPacket::set_sn(::google::protobuf::uint32 value) {
  
  sn_ = value;
  // @@protoc_insertion_point(field_set:sails.RequestPacket.sn)
}

// optional string serviceName = 4;
void RequestPacket::clear_servicename() {
  servicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RequestPacket::servicename() const {
  // @@protoc_insertion_point(field_get:sails.RequestPacket.serviceName)
  return servicename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RequestPacket::set_servicename(const ::std::string& value) {
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sails.RequestPacket.serviceName)
}
 void RequestPacket::set_servicename(const char* value) {
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sails.RequestPacket.serviceName)
}
 void RequestPacket::set_servicename(const char* value, size_t size) {
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sails.RequestPacket.serviceName)
}
 ::std::string* RequestPacket::mutable_servicename() {
  
  // @@protoc_insertion_point(field_mutable:sails.RequestPacket.serviceName)
  return servicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RequestPacket::release_servicename() {
  
  return servicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RequestPacket::set_allocated_servicename(::std::string* servicename) {
  if (servicename != NULL) {
    
  } else {
    
  }
  servicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servicename);
  // @@protoc_insertion_point(field_set_allocated:sails.RequestPacket.serviceName)
}

// optional string funcName = 5;
void RequestPacket::clear_funcname() {
  funcname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RequestPacket::funcname() const {
  // @@protoc_insertion_point(field_get:sails.RequestPacket.funcName)
  return funcname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RequestPacket::set_funcname(const ::std::string& value) {
  
  funcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sails.RequestPacket.funcName)
}
 void RequestPacket::set_funcname(const char* value) {
  
  funcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sails.RequestPacket.funcName)
}
 void RequestPacket::set_funcname(const char* value, size_t size) {
  
  funcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sails.RequestPacket.funcName)
}
 ::std::string* RequestPacket::mutable_funcname() {
  
  // @@protoc_insertion_point(field_mutable:sails.RequestPacket.funcName)
  return funcname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RequestPacket::release_funcname() {
  
  return funcname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RequestPacket::set_allocated_funcname(::std::string* funcname) {
  if (funcname != NULL) {
    
  } else {
    
  }
  funcname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), funcname);
  // @@protoc_insertion_point(field_set_allocated:sails.RequestPacket.funcName)
}

// optional .google.protobuf.Any detail = 6;
bool RequestPacket::has_detail() const {
  return !_is_default_instance_ && detail_ != NULL;
}
void RequestPacket::clear_detail() {
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) delete detail_;
  detail_ = NULL;
}
 const ::google::protobuf::Any& RequestPacket::detail() const {
  // @@protoc_insertion_point(field_get:sails.RequestPacket.detail)
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
 ::google::protobuf::Any* RequestPacket::mutable_detail() {
  
  if (detail_ == NULL) {
    detail_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:sails.RequestPacket.detail)
  return detail_;
}
 ::google::protobuf::Any* RequestPacket::release_detail() {
  
  ::google::protobuf::Any* temp = detail_;
  detail_ = NULL;
  return temp;
}
 void RequestPacket::set_allocated_detail(::google::protobuf::Any* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sails.RequestPacket.detail)
}

// optional int32 timeout = 7;
void RequestPacket::clear_timeout() {
  timeout_ = 0;
}
 ::google::protobuf::int32 RequestPacket::timeout() const {
  // @@protoc_insertion_point(field_get:sails.RequestPacket.timeout)
  return timeout_;
}
 void RequestPacket::set_timeout(::google::protobuf::int32 value) {
  
  timeout_ = value;
  // @@protoc_insertion_point(field_set:sails.RequestPacket.timeout)
}

// map<string, string> context = 8;
int RequestPacket::context_size() const {
  return context_.size();
}
void RequestPacket::clear_context() {
  context_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
RequestPacket::context() const {
  // @@protoc_insertion_point(field_map:sails.RequestPacket.context)
  return context_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
RequestPacket::mutable_context() {
  // @@protoc_insertion_point(field_mutable_map:sails.RequestPacket.context)
  return context_.MutableMap();
}

// map<string, string> status = 9;
int RequestPacket::status_size() const {
  return status_.size();
}
void RequestPacket::clear_status() {
  status_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
RequestPacket::status() const {
  // @@protoc_insertion_point(field_map:sails.RequestPacket.status)
  return status_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
RequestPacket::mutable_status() {
  // @@protoc_insertion_point(field_mutable_map:sails.RequestPacket.status)
  return status_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ResponsePacket::kVersionFieldNumber;
const int ResponsePacket::kTypeFieldNumber;
const int ResponsePacket::kSnFieldNumber;
const int ResponsePacket::kRetFieldNumber;
const int ResponsePacket::kDetailFieldNumber;
#endif  // !_MSC_VER

ResponsePacket::ResponsePacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sails.ResponsePacket)
}

void ResponsePacket::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  detail_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
}

ResponsePacket::ResponsePacket(const ResponsePacket& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:sails.ResponsePacket)
}

void ResponsePacket::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  version_ = 0u;
  type_ = 0u;
  sn_ = 0u;
  ret_ = 0;
  detail_ = NULL;
}

ResponsePacket::~ResponsePacket() {
  // @@protoc_insertion_point(destructor:sails.ResponsePacket)
  SharedDtor();
}

void ResponsePacket::SharedDtor() {
  if (this != default_instance_) {
    delete detail_;
  }
}

void ResponsePacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponsePacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponsePacket_descriptor_;
}

const ResponsePacket& ResponsePacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_saf_5fpacket_2eproto();
  return *default_instance_;
}

ResponsePacket* ResponsePacket::default_instance_ = NULL;

ResponsePacket* ResponsePacket::New(::google::protobuf::Arena* arena) const {
  ResponsePacket* n = new ResponsePacket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponsePacket::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ResponsePacket*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(version_, ret_);
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) delete detail_;
  detail_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool ResponsePacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sails.ResponsePacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional uint32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sn;
        break;
      }

      // optional uint32 sn = 3;
      case 3: {
        if (tag == 24) {
         parse_sn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sn_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ret;
        break;
      }

      // optional int32 ret = 4;
      case 4: {
        if (tag == 32) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_detail;
        break;
      }

      // optional .google.protobuf.Any detail = 5;
      case 5: {
        if (tag == 42) {
         parse_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_detail()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sails.ResponsePacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sails.ResponsePacket)
  return false;
#undef DO_
}

void ResponsePacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sails.ResponsePacket)
  // optional uint32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional uint32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // optional uint32 sn = 3;
  if (this->sn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sn(), output);
  }

  // optional int32 ret = 4;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ret(), output);
  }

  // optional .google.protobuf.Any detail = 5;
  if (this->has_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->detail_, output);
  }

  // @@protoc_insertion_point(serialize_end:sails.ResponsePacket)
}

::google::protobuf::uint8* ResponsePacket::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sails.ResponsePacket)
  // optional uint32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional uint32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // optional uint32 sn = 3;
  if (this->sn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sn(), target);
  }

  // optional int32 ret = 4;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ret(), target);
  }

  // optional .google.protobuf.Any detail = 5;
  if (this->has_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->detail_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:sails.ResponsePacket)
  return target;
}

int ResponsePacket::ByteSize() const {
  int total_size = 0;

  // optional uint32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // optional uint32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // optional uint32 sn = 3;
  if (this->sn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sn());
  }

  // optional int32 ret = 4;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  // optional .google.protobuf.Any detail = 5;
  if (this->has_detail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->detail_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponsePacket::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResponsePacket* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponsePacket>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponsePacket::MergeFrom(const ResponsePacket& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.sn() != 0) {
    set_sn(from.sn());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
  if (from.has_detail()) {
    mutable_detail()->::google::protobuf::Any::MergeFrom(from.detail());
  }
}

void ResponsePacket::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponsePacket::CopyFrom(const ResponsePacket& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponsePacket::IsInitialized() const {

  return true;
}

void ResponsePacket::Swap(ResponsePacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponsePacket::InternalSwap(ResponsePacket* other) {
  std::swap(version_, other->version_);
  std::swap(type_, other->type_);
  std::swap(sn_, other->sn_);
  std::swap(ret_, other->ret_);
  std::swap(detail_, other->detail_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponsePacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponsePacket_descriptor_;
  metadata.reflection = ResponsePacket_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponsePacket

// optional uint32 version = 1;
void ResponsePacket::clear_version() {
  version_ = 0u;
}
 ::google::protobuf::uint32 ResponsePacket::version() const {
  // @@protoc_insertion_point(field_get:sails.ResponsePacket.version)
  return version_;
}
 void ResponsePacket::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:sails.ResponsePacket.version)
}

// optional uint32 type = 2;
void ResponsePacket::clear_type() {
  type_ = 0u;
}
 ::google::protobuf::uint32 ResponsePacket::type() const {
  // @@protoc_insertion_point(field_get:sails.ResponsePacket.type)
  return type_;
}
 void ResponsePacket::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:sails.ResponsePacket.type)
}

// optional uint32 sn = 3;
void ResponsePacket::clear_sn() {
  sn_ = 0u;
}
 ::google::protobuf::uint32 ResponsePacket::sn() const {
  // @@protoc_insertion_point(field_get:sails.ResponsePacket.sn)
  return sn_;
}
 void ResponsePacket::set_sn(::google::protobuf::uint32 value) {
  
  sn_ = value;
  // @@protoc_insertion_point(field_set:sails.ResponsePacket.sn)
}

// optional int32 ret = 4;
void ResponsePacket::clear_ret() {
  ret_ = 0;
}
 ::google::protobuf::int32 ResponsePacket::ret() const {
  // @@protoc_insertion_point(field_get:sails.ResponsePacket.ret)
  return ret_;
}
 void ResponsePacket::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:sails.ResponsePacket.ret)
}

// optional .google.protobuf.Any detail = 5;
bool ResponsePacket::has_detail() const {
  return !_is_default_instance_ && detail_ != NULL;
}
void ResponsePacket::clear_detail() {
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) delete detail_;
  detail_ = NULL;
}
 const ::google::protobuf::Any& ResponsePacket::detail() const {
  // @@protoc_insertion_point(field_get:sails.ResponsePacket.detail)
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
 ::google::protobuf::Any* ResponsePacket::mutable_detail() {
  
  if (detail_ == NULL) {
    detail_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:sails.ResponsePacket.detail)
  return detail_;
}
 ::google::protobuf::Any* ResponsePacket::release_detail() {
  
  ::google::protobuf::Any* temp = detail_;
  detail_ = NULL;
  return temp;
}
 void ResponsePacket::set_allocated_detail(::google::protobuf::Any* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sails.ResponsePacket.detail)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sails

// @@protoc_insertion_point(global_scope)
