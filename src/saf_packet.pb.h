// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: saf_packet.proto

#ifndef PROTOBUF_saf_5fpacket_2eproto__INCLUDED
#define PROTOBUF_saf_5fpacket_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/protobuf/any.pb.h"
// @@protoc_insertion_point(includes)

namespace sails {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_saf_5fpacket_2eproto();
void protobuf_AssignDesc_saf_5fpacket_2eproto();
void protobuf_ShutdownFile_saf_5fpacket_2eproto();

class RequestPacket;
class ResponsePacket;

// ===================================================================

class RequestPacket : public ::google::protobuf::Message {
 public:
  RequestPacket();
  virtual ~RequestPacket();

  RequestPacket(const RequestPacket& from);

  inline RequestPacket& operator=(const RequestPacket& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestPacket& default_instance();

  void Swap(RequestPacket* other);

  // implements Message ----------------------------------------------

  inline RequestPacket* New() const { return New(NULL); }

  RequestPacket* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestPacket& from);
  void MergeFrom(const RequestPacket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestPacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional uint32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 sn = 3;
  void clear_sn();
  static const int kSnFieldNumber = 3;
  ::google::protobuf::uint32 sn() const;
  void set_sn(::google::protobuf::uint32 value);

  // optional string serviceName = 4;
  void clear_servicename();
  static const int kServiceNameFieldNumber = 4;
  const ::std::string& servicename() const;
  void set_servicename(const ::std::string& value);
  void set_servicename(const char* value);
  void set_servicename(const char* value, size_t size);
  ::std::string* mutable_servicename();
  ::std::string* release_servicename();
  void set_allocated_servicename(::std::string* servicename);

  // optional string funcName = 5;
  void clear_funcname();
  static const int kFuncNameFieldNumber = 5;
  const ::std::string& funcname() const;
  void set_funcname(const ::std::string& value);
  void set_funcname(const char* value);
  void set_funcname(const char* value, size_t size);
  ::std::string* mutable_funcname();
  ::std::string* release_funcname();
  void set_allocated_funcname(::std::string* funcname);

  // optional .google.protobuf.Any detail = 6;
  bool has_detail() const;
  void clear_detail();
  static const int kDetailFieldNumber = 6;
  const ::google::protobuf::Any& detail() const;
  ::google::protobuf::Any* mutable_detail();
  ::google::protobuf::Any* release_detail();
  void set_allocated_detail(::google::protobuf::Any* detail);

  // optional int32 timeout = 7;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 7;
  ::google::protobuf::int32 timeout() const;
  void set_timeout(::google::protobuf::int32 value);

  // map<string, string> context = 8;
  int context_size() const;
  void clear_context();
  static const int kContextFieldNumber = 8;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      context() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_context();

  // map<string, string> status = 9;
  int status_size() const;
  void clear_status();
  static const int kStatusFieldNumber = 9;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      status() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_status();

  // @@protoc_insertion_point(class_scope:sails.RequestPacket)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::internal::ArenaStringPtr servicename_;
  ::google::protobuf::internal::ArenaStringPtr funcname_;
  ::google::protobuf::uint32 sn_;
  ::google::protobuf::int32 timeout_;
  ::google::protobuf::Any* detail_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      RequestPacket_ContextEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > context_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      RequestPacket_StatusEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_saf_5fpacket_2eproto();
  friend void protobuf_AssignDesc_saf_5fpacket_2eproto();
  friend void protobuf_ShutdownFile_saf_5fpacket_2eproto();

  void InitAsDefaultInstance();
  static RequestPacket* default_instance_;
};
// -------------------------------------------------------------------

class ResponsePacket : public ::google::protobuf::Message {
 public:
  ResponsePacket();
  virtual ~ResponsePacket();

  ResponsePacket(const ResponsePacket& from);

  inline ResponsePacket& operator=(const ResponsePacket& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponsePacket& default_instance();

  void Swap(ResponsePacket* other);

  // implements Message ----------------------------------------------

  inline ResponsePacket* New() const { return New(NULL); }

  ResponsePacket* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponsePacket& from);
  void MergeFrom(const ResponsePacket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponsePacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 sn = 3;
  void clear_sn();
  static const int kSnFieldNumber = 3;
  ::google::protobuf::uint32 sn() const;
  void set_sn(::google::protobuf::uint32 value);

  // optional int32 ret = 4;
  void clear_ret();
  static const int kRetFieldNumber = 4;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional .google.protobuf.Any detail = 5;
  bool has_detail() const;
  void clear_detail();
  static const int kDetailFieldNumber = 5;
  const ::google::protobuf::Any& detail() const;
  ::google::protobuf::Any* mutable_detail();
  ::google::protobuf::Any* release_detail();
  void set_allocated_detail(::google::protobuf::Any* detail);

  // @@protoc_insertion_point(class_scope:sails.ResponsePacket)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 sn_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::Any* detail_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_saf_5fpacket_2eproto();
  friend void protobuf_AssignDesc_saf_5fpacket_2eproto();
  friend void protobuf_ShutdownFile_saf_5fpacket_2eproto();

  void InitAsDefaultInstance();
  static ResponsePacket* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestPacket

// optional uint32 version = 1;
inline void RequestPacket::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 RequestPacket::version() const {
  // @@protoc_insertion_point(field_get:sails.RequestPacket.version)
  return version_;
}
inline void RequestPacket::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:sails.RequestPacket.version)
}

// optional uint32 type = 2;
inline void RequestPacket::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 RequestPacket::type() const {
  // @@protoc_insertion_point(field_get:sails.RequestPacket.type)
  return type_;
}
inline void RequestPacket::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:sails.RequestPacket.type)
}

// optional uint32 sn = 3;
inline void RequestPacket::clear_sn() {
  sn_ = 0u;
}
inline ::google::protobuf::uint32 RequestPacket::sn() const {
  // @@protoc_insertion_point(field_get:sails.RequestPacket.sn)
  return sn_;
}
inline void RequestPacket::set_sn(::google::protobuf::uint32 value) {
  
  sn_ = value;
  // @@protoc_insertion_point(field_set:sails.RequestPacket.sn)
}

// optional string serviceName = 4;
inline void RequestPacket::clear_servicename() {
  servicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestPacket::servicename() const {
  // @@protoc_insertion_point(field_get:sails.RequestPacket.serviceName)
  return servicename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPacket::set_servicename(const ::std::string& value) {
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sails.RequestPacket.serviceName)
}
inline void RequestPacket::set_servicename(const char* value) {
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sails.RequestPacket.serviceName)
}
inline void RequestPacket::set_servicename(const char* value, size_t size) {
  
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sails.RequestPacket.serviceName)
}
inline ::std::string* RequestPacket::mutable_servicename() {
  
  // @@protoc_insertion_point(field_mutable:sails.RequestPacket.serviceName)
  return servicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestPacket::release_servicename() {
  
  return servicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPacket::set_allocated_servicename(::std::string* servicename) {
  if (servicename != NULL) {
    
  } else {
    
  }
  servicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servicename);
  // @@protoc_insertion_point(field_set_allocated:sails.RequestPacket.serviceName)
}

// optional string funcName = 5;
inline void RequestPacket::clear_funcname() {
  funcname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestPacket::funcname() const {
  // @@protoc_insertion_point(field_get:sails.RequestPacket.funcName)
  return funcname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPacket::set_funcname(const ::std::string& value) {
  
  funcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sails.RequestPacket.funcName)
}
inline void RequestPacket::set_funcname(const char* value) {
  
  funcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sails.RequestPacket.funcName)
}
inline void RequestPacket::set_funcname(const char* value, size_t size) {
  
  funcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sails.RequestPacket.funcName)
}
inline ::std::string* RequestPacket::mutable_funcname() {
  
  // @@protoc_insertion_point(field_mutable:sails.RequestPacket.funcName)
  return funcname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestPacket::release_funcname() {
  
  return funcname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPacket::set_allocated_funcname(::std::string* funcname) {
  if (funcname != NULL) {
    
  } else {
    
  }
  funcname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), funcname);
  // @@protoc_insertion_point(field_set_allocated:sails.RequestPacket.funcName)
}

// optional .google.protobuf.Any detail = 6;
inline bool RequestPacket::has_detail() const {
  return !_is_default_instance_ && detail_ != NULL;
}
inline void RequestPacket::clear_detail() {
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) delete detail_;
  detail_ = NULL;
}
inline const ::google::protobuf::Any& RequestPacket::detail() const {
  // @@protoc_insertion_point(field_get:sails.RequestPacket.detail)
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::google::protobuf::Any* RequestPacket::mutable_detail() {
  
  if (detail_ == NULL) {
    detail_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:sails.RequestPacket.detail)
  return detail_;
}
inline ::google::protobuf::Any* RequestPacket::release_detail() {
  
  ::google::protobuf::Any* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void RequestPacket::set_allocated_detail(::google::protobuf::Any* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sails.RequestPacket.detail)
}

// optional int32 timeout = 7;
inline void RequestPacket::clear_timeout() {
  timeout_ = 0;
}
inline ::google::protobuf::int32 RequestPacket::timeout() const {
  // @@protoc_insertion_point(field_get:sails.RequestPacket.timeout)
  return timeout_;
}
inline void RequestPacket::set_timeout(::google::protobuf::int32 value) {
  
  timeout_ = value;
  // @@protoc_insertion_point(field_set:sails.RequestPacket.timeout)
}

// map<string, string> context = 8;
inline int RequestPacket::context_size() const {
  return context_.size();
}
inline void RequestPacket::clear_context() {
  context_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
RequestPacket::context() const {
  // @@protoc_insertion_point(field_map:sails.RequestPacket.context)
  return context_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
RequestPacket::mutable_context() {
  // @@protoc_insertion_point(field_mutable_map:sails.RequestPacket.context)
  return context_.MutableMap();
}

// map<string, string> status = 9;
inline int RequestPacket::status_size() const {
  return status_.size();
}
inline void RequestPacket::clear_status() {
  status_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
RequestPacket::status() const {
  // @@protoc_insertion_point(field_map:sails.RequestPacket.status)
  return status_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
RequestPacket::mutable_status() {
  // @@protoc_insertion_point(field_mutable_map:sails.RequestPacket.status)
  return status_.MutableMap();
}

// -------------------------------------------------------------------

// ResponsePacket

// optional uint32 version = 1;
inline void ResponsePacket::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 ResponsePacket::version() const {
  // @@protoc_insertion_point(field_get:sails.ResponsePacket.version)
  return version_;
}
inline void ResponsePacket::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:sails.ResponsePacket.version)
}

// optional uint32 type = 2;
inline void ResponsePacket::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 ResponsePacket::type() const {
  // @@protoc_insertion_point(field_get:sails.ResponsePacket.type)
  return type_;
}
inline void ResponsePacket::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:sails.ResponsePacket.type)
}

// optional uint32 sn = 3;
inline void ResponsePacket::clear_sn() {
  sn_ = 0u;
}
inline ::google::protobuf::uint32 ResponsePacket::sn() const {
  // @@protoc_insertion_point(field_get:sails.ResponsePacket.sn)
  return sn_;
}
inline void ResponsePacket::set_sn(::google::protobuf::uint32 value) {
  
  sn_ = value;
  // @@protoc_insertion_point(field_set:sails.ResponsePacket.sn)
}

// optional int32 ret = 4;
inline void ResponsePacket::clear_ret() {
  ret_ = 0;
}
inline ::google::protobuf::int32 ResponsePacket::ret() const {
  // @@protoc_insertion_point(field_get:sails.ResponsePacket.ret)
  return ret_;
}
inline void ResponsePacket::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:sails.ResponsePacket.ret)
}

// optional .google.protobuf.Any detail = 5;
inline bool ResponsePacket::has_detail() const {
  return !_is_default_instance_ && detail_ != NULL;
}
inline void ResponsePacket::clear_detail() {
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) delete detail_;
  detail_ = NULL;
}
inline const ::google::protobuf::Any& ResponsePacket::detail() const {
  // @@protoc_insertion_point(field_get:sails.ResponsePacket.detail)
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::google::protobuf::Any* ResponsePacket::mutable_detail() {
  
  if (detail_ == NULL) {
    detail_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:sails.ResponsePacket.detail)
  return detail_;
}
inline ::google::protobuf::Any* ResponsePacket::release_detail() {
  
  ::google::protobuf::Any* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void ResponsePacket::set_allocated_detail(::google::protobuf::Any* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sails.ResponsePacket.detail)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sails

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_saf_5fpacket_2eproto__INCLUDED
